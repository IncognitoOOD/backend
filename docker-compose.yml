version: '3'

services:

  front:
    image: safdarian/incognito-ood-frontend
    container_name: front
    ports:
      - "8080:8080"
    restart: on-failure
    networks:
      - ood_network
  
  nginx:
    image: nginx
    container_name: nginx
    ports: 
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - worker1
      - worker2
    networks:
      - ood_network

  worker1:
    image: safdarian/incognito-ood-worker
    container_name: worker1
    restart: on-failure
    volumes:
      - ./csv_files:/csv_files
    command: ["uvicorn", "manager:app", "--host", "0.0.0.0", "--port", "8000"]
    networks:
      - ood_network

  worker2:
    image: safdarian/incognito-ood-worker
    container_name: worker2
    restart: on-failure
    volumes:
      - ./csv_files:/csv_files
    command: ["uvicorn", "manager:app", "--host", "0.0.0.0", "--port", "8000"]
    networks:
      - ood_network
  
  mongo1:
    container_name: mongo1
    image: mongo
    volumes:
      - ~/mongors/data1:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ood_network
    ports:
      - 27017:27017
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo2:
    container_name: mongo2
    image: mongo
    volumes:
      - ~/mongors/data2:/data/db
    networks:
      - ood_network
    ports:
      - 27018:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo3:
    container_name: mongo3
    image: mongo
    volumes:
      - ~/mongors/data3:/data/db
    networks:
      - ood_network
    ports:
      - 27019:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  redis:
    container_name: redis
    image: redis
    networks:
      - ood_network
    ports:
      - 6379:6379
networks:
  ood_network:
    name: ood_network
